/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.unicatolica.view;

import br.com.unicatolica.bean.EntradaBean;
import br.com.unicatolica.bean.ProdutoBean;
import br.com.unicatolica.bean.ProdutoEntradaBean;
import br.com.unicatolica.conexao.ConectaDB;
import br.com.unicatolica.dao.EntradaDAO;
import br.com.unicatolica.dao.ProdutoDAO;
import br.com.unicatolica.model.Entrada;
import br.com.unicatolica.model.Produto;
import br.com.unicatolica.model.ProdutoEntrada;
import br.com.unicatolica.utilitario.Alertas;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author danrl
 */
public class FormConsultaEntrada extends javax.swing.JInternalFrame {

    private List<Entrada> listaEntradas;
    private ProdutoEntradaBean peb;
    private EntradaBean eb;

    /**
     * Creates new form FormConsultaEntrada
     */
    public FormConsultaEntrada() {
        initComponents();
        peb = new ProdutoEntradaBean();
        eb = new EntradaBean();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Consultar Entradas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Entrada", "Memorando", "Valor Total", "Data da Entrada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setText("Visualizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jButton3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(71, 71, 71))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int select = jTable1.getSelectedRowCount();
        if (select == 1) {
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente cancelar a entrada?", "Atenção", 0, 3, null);
            if (opcao == JOptionPane.YES_OPTION) {
                int linha = jTable1.getSelectedRow();
                Entrada ent = listaEntradas.get(linha);
                try {
                    List<ProdutoEntrada> listaAux = ProdutoDAO.listarProdutosEntrada(ent);
                    eb.setEntrada(ent);
                    eb.cancelar();
                    eb.cancelarProdutos();
                    for (ProdutoEntrada pe : listaAux) {
                        peb.setProdutoEntrada(pe);
                        peb.retirarDoEstoque();
                        peb = new ProdutoEntradaBean();
                    }
                    Alertas.mensagemConfirmacao("Entrada cancelada com sucesso!");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {
            Alertas.mensagemAviso("Por favor, selecione uma entrada");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getSelectedRowCount() == 1) {
            int linha = jTable1.getSelectedRow();
            eb.setEntrada(listaEntradas.get(linha));
            FormConsultaProdutosEntrada form = new FormConsultaProdutosEntrada(null, true, eb);
            form.setLocation(this.getX(), this.getY() + 50);
            form.setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable1.getSelectedRowCount() == 1) {
            int linha = jTable1.getSelectedRow();
            eb.setEntrada(listaEntradas.get(linha));
            try {
                HashMap p = new HashMap();
                p.put("entrada_id", eb.getEntrada().getId());
                JasperPrint jp = JasperFillManager.fillReport("./jasper/rel_itens.jasper", p, ConectaDB.getConnection());
                JasperViewer jv = new JasperViewer(jp, false);
                jv.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void preencherTabela() {
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        tb.setNumRows(0);
        try {
            listaEntradas = EntradaDAO.listarEntradas();
            for (Entrada ent : listaEntradas) {
                tb.addRow(new Object[]{ent.getId(), ent.getMemorando(), new DecimalFormat("0.00").format(ent.getValorTotal()), ent.getData()});
            }
        } catch (Exception e) {
            Alertas.mensagemErro("Erro ao tentar listar os dados!\n" + e.getMessage());
            e.printStackTrace();
        }

    }

}
